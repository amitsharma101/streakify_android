import java.text.DateFormat
import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "kotlin-android-extensions"
    id "androidx.navigation.safeargs"
    /** For Kotlin Annotation Processor */
    id "kotlin-kapt"
    id "com.google.gms.google-services"
}

static def getCurrentDateTime() {
    DateFormat df = new SimpleDateFormat("yyyy_MM_dd_hh_mm_a")
    return df.format(new Date())
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.streakify.android"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        android.applicationVariants.all { variant ->

            def appName = "Streakify"

            variant.outputs.all {
                def newApkName = "${appName}_(${variant.name})_v${variant.versionName}_${getCurrentDateTime()}.apk"
                outputFileName = newApkName
            }
        }


        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "@string/app_name_release"
            resValue "string", "version_code", defaultConfig.versionCode.toString()
            resValue "string", "version_name", defaultConfig.versionName
        }
        debug {
            applicationIdSuffix = '.debug'
            versionNameSuffix = '-debug'
            resValue "string", "app_name", "@string/app_name_debug"
            resValue "string", "version_code", defaultConfig.versionCode.toString()
            resValue "string", "version_name", defaultConfig.versionName
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    /** Android Default Components */
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    /** LEGACY SUPPORT */
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    /** KOTLIN Coroutines */
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.31'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    /** Android Architecture Components - LIFECYCLE COMPONENTS */
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "android.arch.lifecycle:common-java8:1.1.1"
    testImplementation "android.arch.core:core-testing:1.1.1"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'

    /** Dependency Injection: DAGGER */
    def DAGGER_VERSION = '2.36'
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"


    /** MATERIAL DESIGN */
    implementation 'com.google.android.material:material:1.3.0'

    /** Preferences DataStore */
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha05"


    /** MULTI DEX */
    implementation 'androidx.multidex:multidex:2.0.1'

    /** Card View */
    implementation 'androidx.cardview:cardview:1.0.0'

    /** SwipeRefreshLayout View */
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    /* * Pinview * */
    implementation 'com.github.mukeshsolanki:android-otpview-pinview:2.0.1'

    /** RETROFIT */
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    /** OK HTTP */
    def okHttpVersion = '4.9.0'
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    /** Dimension */
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    /** Glide */
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    /** Dexter permissions */
    implementation 'com.karumi:dexter:6.0.1'

    /** COUNTRY CODE PICKER */
    implementation 'com.github.joielechong:countrycodepicker:2.4.2'

    /** IMAGE CROPPER **/
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.0'

    /** DateTime Picker */
    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'


    def nav_version = "2.3.5"

    // Java language implementation
    implementation("androidx.navigation:navigation-fragment:$nav_version")
    implementation("androidx.navigation:navigation-ui:$nav_version")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:2.4.0-alpha01")

    /** GSON */
    implementation "com.google.code.gson:gson:2.8.6"

    /**
     * FlexBox Layout For Tag Item View
     * */
    implementation 'com.google.android:flexbox:2.0.1'

    // Chuck - Network Debugger
    debugImplementation "com.readystatesoftware.chuck:library:1.1.0"
     releaseImplementation "com.readystatesoftware.chuck:library-no-op:1.1.0"

    /** SMS Retriever API*/
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.0'

    //Mocking
    testImplementation "io.mockk:mockk:1.11.0"

    //https://github.com/mobstac/android-circular-image-progress-viewf
    implementation 'com.mobstac.circularimageprogress:CircularImageProgressView:0.1.3'


    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:28.1.0')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    implementation 'com.google.firebase:firebase-auth-ktx'


    implementation 'com.github.aliab:circular-music-progressbar:v1.4.0'

    //Circular Image View
    //https://github.com/hdodenhof/CircleImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'
}